import React, { useState } from "react";
import Head from "next/head";
import {
  Avatar,
  Box,
  Button,
  Card,
  CardContent,
  CardHeader,
  IconButton,
  TextField,
  Typography,
} from "@mui/material";
import ContentCopyIcon from "@mui/icons-material/ContentCopy";
import PageLoaderLarge from "../components/PageLoaderLarge";
import "../lib/openai";
import { useSnackbar } from "notistack";

export default function Home() {
  const [subject, setSubject] = useState("");
  const [titles, setTitles] = useState([]);
  const { enqueueSnackbar } = useSnackbar();
  const [isLoading, setIsLoading] = useState(false);

  const generateTitle = async () => {
    setIsLoading(true);
    const res = await fetch(`/api/youtube/${subject}/title`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        //Authorization: `Bearer ${user.accessToken}`,
      },
    });

    const resData = await res.json();

    setTitles(resData.results);

    setIsLoading(false);
  };

  const handleCopy = (text: any) => {
    navigator.clipboard.writeText(text);
    enqueueSnackbar("Titre copié avec succès", { variant: "success" });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box>
        <Box
          mt={8}
          display="flex"
          flexDirection="column"
          justifyContent="center"
          alignItems="center"
        >
          <Typography variant="h1">Générateur de titre YouTube</Typography>
          <Typography variant="h2">
            Donnez nous le sujet de votre vidéo, on s&apos;occupe du reste.
          </Typography>
          <TextField
            sx={{ mt: 8, width: 600 }}
            label="Sujet"
            variant="outlined"
            onChange={(event) => setSubject(event.target.value)}
          />
          <Button
            sx={{ mt: 4, backgroundColor: "black" }}
            variant="contained"
            onClick={generateTitle}
          >
            Générer
          </Button>
        </Box>
        {isLoading && <PageLoaderLarge />}
        {titles && !isLoading && (
          <Box
            mt={8}
            display="grid"
            flexDirection="row"
            justifyContent="center"
            alignItems="center"
          >
            {titles.map((title, index) => (
              <Box key={title} my={4}>
                <Card>
                  <CardHeader
                    avatar={
                      <Avatar sx={{ bgcolor: "black" }} aria-label="recipe">
                        {index + 1}
                      </Avatar>
                    }
                    action={
                      <IconButton onClick={() => handleCopy(title)}>
                        <ContentCopyIcon />
                      </IconButton>
                    }
                    title={<Typography variant="body1">{title}</Typography>}
                  />
                </Card>
              </Box>
            ))}
          </Box>
        )}
      </Box>
    </>
  );
}
